name: PR Test

on:
  push:
    branches: [master, features/*]

permissions: write-all

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: test
        ports:
          - 3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'gradle'

      # Gradle wrapper 파일 실행 권한주기
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Gradle Cache 추가
      - name: Cache Gradle packages
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Run test
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          DB_NAME: member
          DB_USER: root
          DB_PASSWORD: test
        run: |
          sudo service mysql restart
          echo $DB_HOST 
          echo $DB_PORT
          mysql --host $DB_HOST --port $DB_PORT -uroot -ptest -e 'CREATE SCHEMA `Member` CHARACTER SET utf8 COLLATE utf8_general_ci';
      - name: Setup and execute Gradle 'test' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments:  build jacocoTestReport
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}


      - name: Codecov
        uses: codecov/codecov-action@v3.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./build/reports/jacoco/test/jacocoTestReport.xml

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.6.1
        if: ${{ always() }}
        with:
          files: ./build/test-results/**/*.xml